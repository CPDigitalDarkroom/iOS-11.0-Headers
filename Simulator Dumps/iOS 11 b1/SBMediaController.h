//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "MPAVRoutingControllerDelegate.h"

@class MPAVRoutingController, NSDate, NSDictionary, NSString, NSTimer, SBApplication, SBSStatusBarStyleOverridesAssertion;

@interface SBMediaController : NSObject <MPAVRoutingControllerDelegate>
{
    int _manualVolumeChangeCount;
    NSDictionary *_nowPlayingInfo;
    float _pendingVolumeChange;
    NSTimer *_volumeCommitTimer;
    _Bool _debounceVolumeRepeat;
    int _numberOfVolumeDecreasesSinceDownButtonDown;
    SBApplication *_lastNowPlayingApplication;
    _Bool _lastNowPlayingAppIsPlaying;
    int _lastMediaRemoteAppActivityStatus;
    _Bool _suppressHUD;
    _Bool _ringerMuted;
    _Bool _screenSharing;
    _Bool _screenSharingSetsStatusBarOverride;
    NSTimer *_screenSharingStatusBarOverrideTimer;
    NSTimer *_videoOutStatusBarOverrideTimer;
    MPAVRoutingController *_routingController;
    NSDate *_lastActivityDate;
    SBSStatusBarStyleOverridesAssertion *_screenSharingStatusBarStyleOverrideAssertion;
    SBSStatusBarStyleOverridesAssertion *_videoOutStatusBarStyleOverrideAssertion;
    int _nowPlayingProcessPID;
}

+ (void)sendResetPlaybackTimeoutCommand;
+ (_Bool)applicationCanBeConsideredNowPlaying:(id)arg1;
+ (id)sharedInstance;
@property(nonatomic) int nowPlayingProcessPID; // @synthesize nowPlayingProcessPID=_nowPlayingProcessPID;
- (void).cxx_destruct;
- (void)_updateLastRecentActivityDate;
- (void)_commitVolumeChange:(id)arg1;
- (void)_cancelPendingVolumeChange;
- (void)_nowPlayingAppDidExit:(id)arg1;
- (void)_authenticationStateChanged:(id)arg1;
- (void)_applicationActivityStatusDidChange:(id)arg1;
- (void)_mediaRemoteNowPlayingApplicationIsPlayingDidChange:(id)arg1;
- (void)_setNowPlayingApplication:(id)arg1;
- (void)_mediaRemoteNowPlayingApplicationDidChange:(id)arg1;
- (void)_mediaRemoteNowPlayingInfoDidChange:(id)arg1;
- (void)_systemMuteChanged:(id)arg1;
- (void)_softMuteChanged:(id)arg1;
- (void)_systemVolumeChanged:(id)arg1;
- (void)_externalScreenChanged:(id)arg1;
- (void)_updateAVRoutes;
- (void)_serverConnectionDied:(id)arg1;
- (void)_unregisterForNotifications;
- (void)_registerForNotifications;
- (id)nameOfPickedRoute;
- (_Bool)isScreenSharing;
- (_Bool)wirelessDisplayRouteIsPicked;
- (_Bool)routeOtherThanHandsetIsAvailable;
- (_Bool)volumeControlIsAvailable;
- (_Bool)handsetRouteIsSelected;
- (void)routingControllerAvailableRoutesDidChange:(id)arg1;
- (void)handleVolumeButtonWithType:(long long)arg1 down:(_Bool)arg2;
- (void)cancelVolumeEvent;
- (void)decreaseVolume;
- (void)increaseVolume;
- (float)_calcButtonRepeatDelay;
- (void)_changeVolumeBy:(float)arg1;
- (_Bool)lastSavedRingerMutedState;
@property(nonatomic, getter=isRingerMuted) _Bool ringerMuted;
- (_Bool)muted;
- (void)setVolume:(float)arg1;
- (float)volume;
- (_Bool)setPlaybackSpeed:(int)arg1;
- (_Bool)toggleShuffle;
- (_Bool)toggleRepeat;
- (_Bool)skipFifteenSeconds:(int)arg1;
- (_Bool)stop;
- (_Bool)togglePlayPause;
- (_Bool)pause;
- (_Bool)play;
- (_Bool)endSeek:(int)arg1;
- (_Bool)beginSeek:(int)arg1;
- (_Bool)changeTrack:(int)arg1;
- (_Bool)_sendMediaCommand:(unsigned int)arg1 options:(id)arg2;
- (_Bool)_sendMediaCommand:(unsigned int)arg1;
- (void)_startVideoOutStatusBarStyleOverride;
- (void)_clearVideoOutStatusBarStyleOverride;
- (void)_updateScreenSharingStatusBarStyleOverrideSuppressionPreference:(id)arg1;
- (void)updateScreenSharingStatusBarStyleOverride;
- (void)_clearScreenSharingStatusBarStyleOverride;
@property _Bool suppressHUD;
@property(readonly, nonatomic) __weak SBApplication *nowPlayingApplication;
- (_Bool)addTrackToWishList;
- (_Bool)likeTrack;
- (_Bool)banTrack;
@property(readonly, nonatomic) NSDate *lastActivityDate;
- (_Bool)isApplicationActivityActive;
- (_Bool)isPaused;
- (_Bool)isPlaying;
- (_Bool)isLastTrack;
- (_Bool)isFirstTrack;
- (_Bool)hasTrack;
- (void)setNowPlayingInfo:(id)arg1;
- (id)_nowPlayingInfo;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

